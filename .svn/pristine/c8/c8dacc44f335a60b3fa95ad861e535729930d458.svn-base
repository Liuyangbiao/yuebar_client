package com.fullteem.yueba.app.ui.fragment;

import java.util.ArrayList;
import java.util.List;

import android.content.Intent;
import android.os.Bundle;
import android.support.v4.app.Fragment;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.AdapterView;
import android.widget.AdapterView.OnItemClickListener;

import com.fullteem.yueba.R;
import com.fullteem.yueba.app.adapter.NearBySingerListAdapter;
import com.fullteem.yueba.app.ui.SingerVideoListActivity;
import com.fullteem.yueba.app.ui.fragment.NearbyMainFragment.IFilterListener;
import com.fullteem.yueba.globle.GlobleConstant;
import com.fullteem.yueba.model.ResponeModel;
import com.fullteem.yueba.model.SingerListModel;
import com.fullteem.yueba.net.http.CustomAsyncResponehandler;
import com.fullteem.yueba.net.http.HttpRequest;
import com.fullteem.yueba.util.SharePreferenceUtil;
import com.fullteem.yueba.util.TimeUtil;
import com.fullteem.yueba.widget.EmptyView;
import com.fullteem.yueba.widget.XListView;
import com.fullteem.yueba.widget.XListView.IXListViewListener;

/**
 * @author jun
 * @version 1.0.0
 * @created 2014年11月26日&emsp;上午11:58:20
 * @use 附近模块->歌手
 */
public class NearbySingerFrgment extends Fragment implements IFilterListener {
	private View view;
	private List<SingerListModel> listSinger;
	private NearBySingerListAdapter adapter;
	private XListView xListViewFriends;
	private EventListener mListener;
	private View lvLoading;

	private boolean isBack;
	private int pageSize = 10;// 默认10条为1页
	private boolean isLoadMore = false;
	private boolean isRefresh = false;
	private int pageNo = 1;
	
	public NearbySingerFrgment()
	{
		
	}

	@Override
	public View onCreateView(LayoutInflater inflater, ViewGroup container, Bundle savedInstanceState) {
		view = inflater.inflate(R.layout.fragment_nearby_singer, container, false);
		initView();
		initData();
		bindView();
		return view;
	}

	public void setPageSize(int pageSize) {
		this.pageSize = pageSize;
	}

	private void initData() {
		mListener = new EventListener();

		xListViewFriends.setAdapter(adapter = adapter == null ? new NearBySingerListAdapter(getActivity(), listSinger = listSinger == null ? new ArrayList<SingerListModel>()
				: listSinger) : adapter);

		// --------------------------examples data--------------------------
		// listSinger = new ArrayList<SingerModel>();
		// int dataTotal = new Random().nextInt(10);
		// for (int i = 0; i < dataTotal; i++) {
		// SingerModel singerModel = new SingerModel();
		// singerModel.setUserHeader("drawable://" +
		// R.drawable.ico_loginmain_sina);
		// singerModel.setUserNickname("Test" + i);
		// singerModel.setIntroduction(getString(R.string.singer_value_normal));
		// singerModel.setBarName(getString(R.string.singer_barName_normal));
		// singerModel.setUserViews("1000" + i);
		// singerModel.setPraise("999" + i);
		// listSinger.add(singerModel);
		// }

		// --------------------------examples data--------------------------
	}

	private void initView() {
		xListViewFriends = (XListView) view.findViewById(R.id.listViewSinger);
		xListViewFriends.setPullLoadEnable(false);
		EmptyView emptyView = new EmptyView(getActivity());
		emptyView.setVisibility(View.GONE);
		((ViewGroup) xListViewFriends.getParent()).addView(emptyView);
		xListViewFriends.setEmptyView(emptyView);
		lvLoading = view.findViewById(R.id.lvLoading);
		lvLoading.setVisibility(View.GONE);
	}

	private void bindView() {
		xListViewFriends.setOnItemClickListener(mListener);
		xListViewFriends.setXListViewListener(mListener);
	}

	private class EventListener implements OnItemClickListener, IXListViewListener {
		@Override
		public void onItemClick(AdapterView<?> parent, View view, int position, long id) {
			if (position == 0 || position == listSinger.size() + 1)
				return;
			Intent intent = new Intent(getActivity(), SingerVideoListActivity.class);
			intent.putExtra(GlobleConstant.SINGER_ID, listSinger.get(position - 1).getSingerId());
			intent.putExtra(GlobleConstant.SINGER_NAME, listSinger.get(position - 1).getSingerName());
			intent.putExtra(GlobleConstant.PUB_NAME, listSinger.get(position - 1).getBarName());
			intent.putExtra(GlobleConstant.PUB_ID, listSinger.get(position - 1).getBarId());
			startActivity(intent);
		}

		@Override
		public void onRefresh() {
			isLoadMore = false;
			isRefresh = true;
			pageNo = 1;
			loadData();
			xListViewFriends.setRefreshTime(TimeUtil.getCurrentDateTime());
		}

		@Override
		public void onLoadMore() {
			isLoadMore = true;
			isRefresh = false;
			pageNo++;
			loadData();
		}
	}

	/**
	 * 从服务器获取数据
	 */
	private void loadData() {
		int filterIndex = SharePreferenceUtil.getInstance(getActivity()).getIntFromShare(GlobleConstant.SINGER_FILTER, 3);
		System.out.println("filterIndex:"+filterIndex);
		Integer singerSex = null;
		if (filterIndex == 0)
			singerSex = 1;
		else if (filterIndex == 1)
			singerSex = 2;
		System.out.println("singerSex:"+singerSex);
		HttpRequest.getInstance(getActivity()).getSingerList(pageNo, pageSize, singerSex, new CustomAsyncResponehandler() {
			@Override
			public void onSuccess(ResponeModel baseModel) {
				if (baseModel != null && baseModel.isStatus()) {
					List<SingerListModel> listModels = (List<SingerListModel>) baseModel.getResultObject();
					System.out.println("baseModel result:"+baseModel.getResult());
					xListViewFriends.setPullLoadEnable(listModels == null ? false : listModels.size() >= pageSize);
					if (!isLoadMore)
						listSinger.clear();
					listSinger.addAll(listModels);
					adapter.notifyDataSetChanged();
					isBack = true;
				}
			}

			@Override
			public void onFinish() {
				xListViewFriends.setVisibility(View.VISIBLE);
				lvLoading.setVisibility(View.GONE);
				if (isRefresh) {
					xListViewFriends.stopRefresh();
					isRefresh = false;
				}
			}

			@Override
			public void onStart() {
				if (listSinger == null || listSinger.size() <= 0) {
					lvLoading.setVisibility(View.VISIBLE);
					xListViewFriends.setVisibility(View.GONE);
				}
			}

			@Override
			public void onFailure(Throwable error, String content) {
			}
		});
	}

	@Override
	public void onResume() {
		super.onResume();
		if (!isBack)
			loadData();
	}

	@Override
	public void onDestroy() {
		super.onDestroy();
		isBack = false;
	}

	@Override
	public void onFilterClick(View view) {
		pageNo = 1;
		listSinger.clear();
		adapter.notifyDataSetChanged();
		loadData();
	}

}
