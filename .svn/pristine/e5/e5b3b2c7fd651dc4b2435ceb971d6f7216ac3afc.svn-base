package com.fullteem.yueba.app.ui.fragment;

import java.util.ArrayList;
import java.util.List;

import android.content.Intent;
import android.os.Bundle;
import android.os.Handler;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.AdapterView;
import android.widget.AdapterView.OnItemClickListener;

import com.alibaba.fastjson.JSONObject;
import com.fullteem.yueba.R;
import com.fullteem.yueba.app.AppContext;
import com.fullteem.yueba.app.adapter.NearByFriendsListAdapter;
import com.fullteem.yueba.app.ui.ChatActivity;
import com.fullteem.yueba.app.ui.fragment.NearbyMainFragment.IFilterListener;
import com.fullteem.yueba.db.DBFriendListDao;
import com.fullteem.yueba.globle.GlobleConstant;
import com.fullteem.yueba.model.NearbyPubFriendsModel;
import com.fullteem.yueba.model.NearbyPubFriendsModel.PubFriendsModel;
import com.fullteem.yueba.model.UserCommonModel;
import com.fullteem.yueba.net.Urls;
import com.fullteem.yueba.net.http.AsyncHttpResponseHandler;
import com.fullteem.yueba.net.http.HttpRequestFactory;
import com.fullteem.yueba.util.AppUtil;
import com.fullteem.yueba.util.JsonUtil;
import com.fullteem.yueba.util.SharePreferenceUtil;
import com.fullteem.yueba.util.StringUtils;
import com.fullteem.yueba.widget.EmptyView;
import com.fullteem.yueba.widget.XListView;
import com.fullteem.yueba.widget.XListView.IXListViewListener;

/**
 * @author jun
 * @version 1.0.0
 * @created 2014年11月26日&emsp;上午11:58:20
 * @use 附近模块->吧友
 */
public class NearbyFriendsFrgment extends BaseFragment implements IFilterListener {

	private View view;
	private List<PubFriendsModel> listFriends;
	private XListView xListViewFriends;
	private static final int BAR_FRIENDS_BACK = 0X123;
	private NearByFriendsListAdapter nearBylistAdapter;
	private NearbyPubFriendsModel npf;
	private AppContext appContext;
	private View lvLoading;

	private int pageSize = 10;// 默认10条为1页
	private boolean isRefresh = false;
	private int currentPosition;

	@Override
	public View onCreateView(LayoutInflater inflater, ViewGroup container, Bundle savedInstanceState) {
		view = inflater.inflate(R.layout.fragment_nearby_friends, container, false);
		initData();
		initView();
		return view;
	}

	public void setPageSize(int pageSize) {
		this.pageSize = pageSize;
	}

	/**
	 * 获取吧友请求
	 */
	private void getPubFriendsRequest() {
		// ((BaseActivity) getActivity()).showLoadingDialog("正在获取");
		JSONObject job = new JSONObject();
		// 城市ID目前写死
		job.put("cityId", 1);
		job.put("userId", appContext.getUserInfo().getUserId());
		job.put("pageNumber", AppUtil.getPageNum(listFriends.size(), pageSize));
		job.put("pageSize", pageSize);
		job.put("lat",appContext.getLocation().getLatitude());
		job.put("lng",appContext.getLocation().getLongitude());
		// 吧友列表查询 性别参数 userSex (1:男；2女,不限就不传递任何参数)
		int filterIndex = SharePreferenceUtil.getInstance(getActivity()).getIntFromShare(GlobleConstant.BARFRIENDS_FILTER, 3);
		if (filterIndex == 0)
			job.put("userSex", 2);
		else if (filterIndex == 1)
			job.put("userSex", 1);

		HttpRequestFactory.getInstance().getRequest(Urls.BAR_FRIENDS, job, new AsyncHttpResponseHandler() {

			@Override
			public void onSuccess(String content) {
				super.onSuccess(content);
				npf = new NearbyPubFriendsModel();
				// npfm = npf.new PubFriendsModel();
				npf = JsonUtil.convertJsonToObject(content, NearbyPubFriendsModel.class);
				if (npf != null && npf.getResult() != null) {
					listFriends.addAll(npf.getResult());
				}
				System.out.println("listFriends"+listFriends.size());
				UIhandler.sendEmptyMessage(BAR_FRIENDS_BACK);
			}

			@Override
			public void onFailure(Throwable error) {
				super.onFailure(error);
			}

			public void onStart() {
				if (listFriends == null || listFriends.size() <= 0) {
					lvLoading.setVisibility(View.VISIBLE);
					xListViewFriends.setVisibility(View.GONE);
				}
			};

			@Override
			public void onFinish() {
				super.onFinish();
				// ((BaseActivity)
				// getActivity()).dismissLoadingDialog();
				lvLoading.setVisibility(View.GONE);
				xListViewFriends.setVisibility(View.VISIBLE);
				if (isRefresh)
					xListViewFriends.stopRefresh();
			}

		});

	}

	Handler UIhandler = new Handler() {
		public void handleMessage(android.os.Message msg) {
			switch (msg.what) {
			case BAR_FRIENDS_BACK:
				nearBylistAdapter.notifyDataSetChanged();
				// 设置加载更多是否可见
				xListViewFriends.setPullLoadEnable(StringUtils.isLoadMoreVisible(listFriends.size(), pageSize));
				break;

			default:
				break;
			}
		};
	};

	private void initData() {
		appContext = (AppContext) getActivity().getApplication();
		listFriends = new ArrayList<NearbyPubFriendsModel.PubFriendsModel>();
	}

	private void initView() {
		xListViewFriends = (XListView) view.findViewById(R.id.listViewBarFriends);
		nearBylistAdapter = new NearByFriendsListAdapter(getActivity(), listFriends);
		xListViewFriends.setAdapter(nearBylistAdapter);
		xListViewFriends.setXListViewListener(new IXListViewListener() {

			@Override
			public void onRefresh() {
				listFriends.clear();
				isRefresh = true;
				getPubFriendsRequest();
			}

			@Override
			public void onLoadMore() {
				isRefresh = false;
				getPubFriendsRequest();
			}
		});
		xListViewFriends.setOnItemClickListener(new OnItemClickListener() {

			@Override
			public void onItemClick(AdapterView<?> parent, View view, int position, long id) {
				if (position == 0 || position == listFriends.size() + 1)
					return;
				currentPosition = position - 1;
				Intent intent = new Intent(getActivity(), ChatActivity.class);
				intent.putExtra("userId", listFriends.get(currentPosition).getImServerId());
				intent.putExtra("nickname", listFriends.get(currentPosition).getUserName());
				intent.putExtra("imgurl", listFriends.get(currentPosition).getUserLogoUrl());

				// 直接在跳转之前就在数据库插入信息
				new Thread(new Runnable() {
					@Override
					public void run() {
						DBFriendListDao dao = new DBFriendListDao(getActivity());
						UserCommonModel user = new UserCommonModel();
						user.setUserMobile(listFriends.get(currentPosition).getUserMobile());
						user.setUserId(listFriends.get(currentPosition).getUserId());
						user.setUserName(listFriends.get(currentPosition).getUserName());
						String imgUrl;
						if (listFriends.get(currentPosition).getUserLogoUrl() == null) {
							imgUrl = "null";
						} else {
							imgUrl = listFriends.get(currentPosition).getUserLogoUrl();
						}
						user.setUserLogoUrl(imgUrl);
						dao.saveContacter(user);
					}
				}).start();
				startActivity(intent);

			}
		});

		EmptyView emptyView = new EmptyView(getActivity());
		emptyView.setVisibility(View.GONE);
		((ViewGroup) xListViewFriends.getParent()).addView(emptyView);
		xListViewFriends.setEmptyView(emptyView);
		lvLoading = view.findViewById(R.id.lvLoading);
		lvLoading.setVisibility(View.GONE);

		// 发送请求
		getPubFriendsRequest();
	}

	//	/**
	//	 * @author ssy 附近吧友
	//	 */
	//	class NearByFriendsListAdapter extends BaseListAdapter<NearbyPubFriendsModel.PubFriendsModel> {
	//		private Context context;
	//
	//		public NearByFriendsListAdapter(Activity context, List<NearbyPubFriendsModel.PubFriendsModel> list) {
	//			super(context, list);
	//			this.context = context;
	//		}
	//
	//		@Override
	//		public View getView(int position, View convertView, ViewGroup parent) {
	//			ViewHolder vh;
	//			if (convertView == null) {
	//				convertView = LayoutInflater.from(context).inflate(R.layout.adapter_barfriends_xlistview, null);
	//				vh = new ViewHolder();
	//				vh.ImgViewHeader = (CircleImageView) convertView.findViewById(R.id.ImgViewHeader);
	//				vh.tvName = (TextView) convertView.findViewById(R.id.tvName);
	//				vh.tvSpace = (TextView) convertView.findViewById(R.id.tvSpace);
	//				vh.tvTime = (TextView) convertView.findViewById(R.id.tvTime);
	//				vh.tvSex = (TextView) convertView.findViewById(R.id.tvSex);
	//				vh.tvMood = (TextView) convertView.findViewById(R.id.tvMood);
	//				convertView.setTag(vh);
	//			} else {
	//				vh = (ViewHolder) convertView.getTag();
	//			}
	//			vh.tvName.setText(listFriends.get(position).getUserName());
	//			if (listFriends.get(position).getDistance() == null || "null".equalsIgnoreCase(listFriends.get(position).getDistance())) {
	//				vh.tvSpace.setText("100米以内");
	//			} else {
	//				vh.tvSpace.setText(listFriends.get(position).getDistance());
	//			}
	//			vh.tvTime.setText(listFriends.get(position).getCreateDate1());
	//			final int lastPosition = position;
	//			vh.ImgViewHeader.setOnClickListener(new OnClickListener() {
	//
	//				@Override
	//				public void onClick(View v) {
	//					Intent intent = new Intent(getActivity(), PerssonalInfoAcitivity.class);
	//					intent.putExtra("userId", listFriends.get(lastPosition).getUserId());
	//					startActivity(intent);
	//
	//				}
	//			});
	//
	//			if ("男".equalsIgnoreCase(listFriends.get(position).getUserSex())) {
	//				StringUtils.changeStyle(getActivity(), vh.tvSex, Gender.GENDER_BOY);
	//				// vh.tvSex.setBackgroundResource(R.drawable.tv_gender_selector);
	//			} else {
	//				StringUtils.changeStyle(getActivity(), vh.tvSex, Gender.GENDER_GIRL);
	//				// vh.tvSex.setBackgroundResource(R.drawable.barfriend_boy_bg);
	//			}
	//			vh.tvSex.setText(listFriends.get(position).getUserAge());
	//			vh.tvMood.setText(listFriends.get(position).getUserAsign());
	//
	//			ImageLoaderUtil.getImageLoader().displayImage(listFriends.get(position).getUserLogoUrl(), vh.ImgViewHeader);
	//
	//			return convertView;
	//		}
	//	}
	//
	//	class ViewHolder {
	//		private CircleImageView ImgViewHeader;
	//		private TextView tvName;
	//		private TextView tvSpace;
	//		private TextView tvTime;
	//		private TextView tvSex;
	//		private TextView tvMood;
	//		private TextView tvAge;
	//	}

	@Override
	public void onFilterClick(View view) {
		listFriends.clear();
		getPubFriendsRequest();
	}

}